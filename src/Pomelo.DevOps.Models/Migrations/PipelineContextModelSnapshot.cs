// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pomelo.DevOps.Models;

#nullable disable

namespace Pomelo.DevOps.Models.Migrations
{
    [DbContext(typeof(PipelineContext))]
    partial class PipelineContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Pomelo.DevOps.Models.Addin", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Path")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id", "Path");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Addins");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.Agent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<long>("AgentPoolId")
                        .HasColumnType("bigint");

                    b.Property<string>("ClientVersion")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<Guid?>("CurrentJobStageId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime>("HeartBeat")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgentPoolId");

                    b.HasIndex("CurrentJobStageId");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.AgentPool", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("ProjectId")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("AgentPools");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.Binary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ContentType")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Filename")
                        .HasColumnType("longtext");

                    b.Property<string>("Sha256")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Binaries");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.BinaryPartition", b =>
                {
                    b.Property<Guid>("BinaryId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Partition")
                        .HasColumnType("int");

                    b.Property<byte[]>("Bytes")
                        .HasColumnType("longblob");

                    b.HasKey("BinaryId", "Partition");

                    b.ToTable("BinaryPartitions");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.GalleryPackage", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Version")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<long>("Downloads")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("IconId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("ListInGallery")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Methods")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<Guid>("PackageBinaryId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Platform")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id", "Version");

                    b.HasIndex("AuthorId");

                    b.HasIndex("IconId");

                    b.HasIndex("ListInGallery");

                    b.HasIndex("PackageBinaryId");

                    b.ToTable("GalleryPackages");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("CurrentStageOrder")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("FinishedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.Property<string>("PipelineId")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Timeout")
                        .HasColumnType("int");

                    b.Property<string>("TriggerName")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("TriggerType")
                        .HasColumnType("int");

                    b.Property<DateTime>("TriggeredAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Status");

                    b.HasIndex("TriggeredAt");

                    b.HasIndex("PipelineId", "Number")
                        .IsUnique();

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.JobExtension", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("ExtensionEntryUrl")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("IconUrl")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("ManageUrl")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.Property<string>("ViewUrl")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Priority");

                    b.ToTable("JobExtensions");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.JobLabel", b =>
                {
                    b.Property<Guid>("JobId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Label")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.HasKey("JobId", "Label");

                    b.HasIndex("Label");

                    b.ToTable("JobLabels");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.JobStage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AgentId")
                        .HasColumnType("char(36)");

                    b.Property<long?>("AgentPoolId")
                        .HasColumnType("bigint");

                    b.Property<int>("Condition")
                        .HasColumnType("int");

                    b.Property<string>("ConditionVariable")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime?>("FinishedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Identifier")
                        .HasColumnType("int");

                    b.Property<int>("IsolationLevel")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid>("PipelineJobId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Timeout")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("AgentPoolId");

                    b.HasIndex("PipelineJobId");

                    b.HasIndex("Status");

                    b.ToTable("JobStages");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.JobStep", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ArgumentsString")
                        .HasColumnType("longtext");

                    b.Property<int>("Attempts")
                        .HasColumnType("int");

                    b.Property<int>("Condition")
                        .HasColumnType("int");

                    b.Property<string>("ConditionVariable")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("ErrorHandlingMode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FinishedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Method")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid>("PipelineJobStageId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Retry")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StepId")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("Timeout")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("PipelineJobStageId");

                    b.ToTable("JobSteps");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.JobVariable", b =>
                {
                    b.Property<Guid>("PipelineJobId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("PipelineJobId", "Name");

                    b.ToTable("JobVariables");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.Log", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<long>("JobNumber")
                        .HasColumnType("bigint");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("LogSet")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("PipelineId")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Text")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PipelineId", "JobNumber", "LogSet", "Time");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.LoginProvider", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Body")
                        .HasColumnType("longtext");

                    b.Property<string>("ClientSecret")
                        .HasColumnType("longtext");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("IconUrl")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<int>("Mode")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Mode");

                    b.HasIndex("Enabled", "Priority");

                    b.ToTable("LoginProviders");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.Metrics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AgentId")
                        .HasColumnType("char(36)");

                    b.Property<long>("Timestamp")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("Timestamp", "AgentId", "Type");

                    b.ToTable("Metrics");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.PersonalAccessToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ExpireAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Token")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.HasIndex("Token", "ExpireAt");

                    b.ToTable("PersonalAccessTokens");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.Pipeline", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("PipelineBody")
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectId")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Visibility")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.HasIndex("Visibility");

                    b.ToTable("Pipelines");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.PipelineAccess", b =>
                {
                    b.Property<string>("PipelineId")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<int>("AccessType")
                        .HasColumnType("int");

                    b.HasKey("PipelineId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("PipelineAccesses");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.PipelineFavorite", b =>
                {
                    b.Property<string>("PipelineId")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("PipelineId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("PipelineFavorites");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.PipelineTrigger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ExternalId")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("JobExtensionId")
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("PipelineId")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("ProviderId")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("Enabled");

                    b.HasIndex("JobExtensionId");

                    b.HasIndex("PipelineId");

                    b.HasIndex("ProviderId");

                    b.ToTable("PipelineTriggers");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.Policy", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Extended")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("ValueJson")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Key");

                    b.HasIndex("Order");

                    b.ToTable("Policies");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.Project", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Dashboard")
                        .HasColumnType("json");

                    b.Property<string>("ExtensionPath")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<Guid?>("IconId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("IconId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.ProjectMember", b =>
                {
                    b.Property<string>("ProjectId")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("ProjectId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectMembers");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.TriggerProvider", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("IconUrl")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("ManageUrl")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("ProviderEntryUrl")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.Property<string>("ViewUrl")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Priority");

                    b.ToTable("TriggerProviders");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AvatarId")
                        .HasColumnType("char(36)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("LoginProviderId")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<byte[]>("PasswordHash")
                        .HasMaxLength(64)
                        .HasColumnType("varbinary(64)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<byte[]>("Salt")
                        .HasMaxLength(64)
                        .HasColumnType("varbinary(64)");

                    b.Property<string>("Username")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("AvatarId");

                    b.HasIndex("LoginProviderId", "Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.UserSession", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Address")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Agent")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ExpireAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserSessions");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.Widget", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("ConfigEntryView")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("IconUrl")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Items")
                        .HasColumnType("json");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("WidgetEntryView")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Widgets");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.Addin", b =>
                {
                    b.HasOne("Pomelo.DevOps.Models.Project", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.Agent", b =>
                {
                    b.HasOne("Pomelo.DevOps.Models.AgentPool", "AgentPool")
                        .WithMany("Agents")
                        .HasForeignKey("AgentPoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pomelo.DevOps.Models.JobStage", "CurrentJobStage")
                        .WithMany()
                        .HasForeignKey("CurrentJobStageId");

                    b.Navigation("AgentPool");

                    b.Navigation("CurrentJobStage");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.AgentPool", b =>
                {
                    b.HasOne("Pomelo.DevOps.Models.Project", "Organization")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.BinaryPartition", b =>
                {
                    b.HasOne("Pomelo.DevOps.Models.Binary", "Binary")
                        .WithMany("Partitions")
                        .HasForeignKey("BinaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Binary");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.GalleryPackage", b =>
                {
                    b.HasOne("Pomelo.DevOps.Models.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pomelo.DevOps.Models.Binary", "Icon")
                        .WithMany()
                        .HasForeignKey("IconId");

                    b.HasOne("Pomelo.DevOps.Models.Binary", "Package")
                        .WithMany()
                        .HasForeignKey("PackageBinaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Icon");

                    b.Navigation("Package");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.Job", b =>
                {
                    b.HasOne("Pomelo.DevOps.Models.Pipeline", "Pipeline")
                        .WithMany("Jobs")
                        .HasForeignKey("PipelineId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Pipeline");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.JobLabel", b =>
                {
                    b.HasOne("Pomelo.DevOps.Models.Job", "Job")
                        .WithMany("Labels")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.JobStage", b =>
                {
                    b.HasOne("Pomelo.DevOps.Models.Agent", "Agent")
                        .WithMany("JobStages")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Pomelo.DevOps.Models.AgentPool", "AgentPool")
                        .WithMany("JobStages")
                        .HasForeignKey("AgentPoolId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Pomelo.DevOps.Models.Job", "PipelineJob")
                        .WithMany("Stages")
                        .HasForeignKey("PipelineJobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("AgentPool");

                    b.Navigation("PipelineJob");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.JobStep", b =>
                {
                    b.HasOne("Pomelo.DevOps.Models.JobStage", "PipelineJobStage")
                        .WithMany("Steps")
                        .HasForeignKey("PipelineJobStageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PipelineJobStage");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.JobVariable", b =>
                {
                    b.HasOne("Pomelo.DevOps.Models.Job", "PipelineJob")
                        .WithMany("Variables")
                        .HasForeignKey("PipelineJobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PipelineJob");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.PersonalAccessToken", b =>
                {
                    b.HasOne("Pomelo.DevOps.Models.User", "User")
                        .WithMany("PersonalAccessTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.Pipeline", b =>
                {
                    b.HasOne("Pomelo.DevOps.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("Pomelo.DevOps.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.PipelineAccess", b =>
                {
                    b.HasOne("Pomelo.DevOps.Models.Pipeline", "Pipeline")
                        .WithMany("Accesses")
                        .HasForeignKey("PipelineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pomelo.DevOps.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pipeline");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.PipelineFavorite", b =>
                {
                    b.HasOne("Pomelo.DevOps.Models.Pipeline", "Pipeline")
                        .WithMany()
                        .HasForeignKey("PipelineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pomelo.DevOps.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pipeline");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.PipelineTrigger", b =>
                {
                    b.HasOne("Pomelo.DevOps.Models.JobExtension", null)
                        .WithMany("PipelineTriggers")
                        .HasForeignKey("JobExtensionId");

                    b.HasOne("Pomelo.DevOps.Models.Pipeline", "Pipeline")
                        .WithMany("Triggers")
                        .HasForeignKey("PipelineId");

                    b.HasOne("Pomelo.DevOps.Models.TriggerProvider", "Provider")
                        .WithMany("PipelineTriggers")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Pipeline");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.Project", b =>
                {
                    b.HasOne("Pomelo.DevOps.Models.Binary", "Icon")
                        .WithMany()
                        .HasForeignKey("IconId");

                    b.Navigation("Icon");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.ProjectMember", b =>
                {
                    b.HasOne("Pomelo.DevOps.Models.Project", "Project")
                        .WithMany("Members")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pomelo.DevOps.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.User", b =>
                {
                    b.HasOne("Pomelo.DevOps.Models.Binary", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarId");

                    b.HasOne("Pomelo.DevOps.Models.LoginProvider", "LoginProvider")
                        .WithMany("Users")
                        .HasForeignKey("LoginProviderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Avatar");

                    b.Navigation("LoginProvider");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.UserSession", b =>
                {
                    b.HasOne("Pomelo.DevOps.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.Agent", b =>
                {
                    b.Navigation("JobStages");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.AgentPool", b =>
                {
                    b.Navigation("Agents");

                    b.Navigation("JobStages");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.Binary", b =>
                {
                    b.Navigation("Partitions");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.Job", b =>
                {
                    b.Navigation("Labels");

                    b.Navigation("Stages");

                    b.Navigation("Variables");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.JobExtension", b =>
                {
                    b.Navigation("PipelineTriggers");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.JobStage", b =>
                {
                    b.Navigation("Steps");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.LoginProvider", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.Pipeline", b =>
                {
                    b.Navigation("Accesses");

                    b.Navigation("Jobs");

                    b.Navigation("Triggers");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.Project", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.TriggerProvider", b =>
                {
                    b.Navigation("PipelineTriggers");
                });

            modelBuilder.Entity("Pomelo.DevOps.Models.User", b =>
                {
                    b.Navigation("PersonalAccessTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
